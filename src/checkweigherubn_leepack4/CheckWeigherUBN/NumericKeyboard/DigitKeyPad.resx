<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAGQAAABECAYAAAB3TpBiAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        wAAADsABataJCQAAA/1JREFUeF7t3E1IVGscx3GXhaSYEkjYqhatclf7il4pWgdGWEmpNdpYaa+3stKE
        iuLehSN0yd6hheSQREU1o2Yvdm9vk9AtKs1kLIMSQurX739y4ChTaTneP53/Ax/mnKcx5zxf58ysniTY
        UDUsiLJhQZSNAUGys7ORkpKC9PR0pKammgRKS0tz1lrW3D0GBMnMzERSUpJj0sSJmCBxxowxI2XsWIwf
        Nw5pXNfk5GRnnWXN3WNAkKysLOdJs2bOxPQFC1B86RL+5PzBjx9R1dODyu5uM1xv3qBS1u7DB5R3dKCi
        vh514TDyfT5nrWXN3SNukGWrV2M/zxcGApiyeDFmHziA0t5e7OPcTtpuhmQbbaVN795hS3MzAhcvIsRI
        Tzm3fOXKoQdZmpuL3TwXFVQQiWBGUREmz52LvNZWZ94J8/kztn/6ZAaREFuotL0du0+dQt316whHo/iX
        c7coQstXrBh+kNgv+IPH5VRF848cwdQlS5DLt90unu91Pc/zuBZltOnsWZRTsKUFD3h+hyTEzX6/HMRN
        5uV2tqimBtNycjCFnzUSag/tkJ/xIHlHSAhfbS1qGeIej4WEiEVwG9EgMfLukAgSQ25l2YWFWFdXB38w
        iPX84PIK/4ULKOVnw9+M8Yhr0UrxIrglJIibfNj7GhrwrLMTr3n+qq/PE+Ra23jNJ69cwX2uQbzFjyfh
        QeRtWxIK4T9+xevg8UuPkGuN8JqP89q/dXuKZ1SC+PlN4gm/0rXzON6L/x3JtUZ4zRZECQuijAVRxoIo
        Y0GUsSDKWBBlLIgyFkQZC6KMBVHGgihjQZSxIMpYEGUsiDIWRBkLoowFUcaCKGNBlLEgylgQZSyIMhZE
        GQuijAVRxoIoY0GUsSDKWBBlLIgyFkQZC6KMBVHGgihjQZSxIMpYEGUsiDIWRBnVQdY3NXl6aw1Z6JZ+
        gwMMlrAg2wSfV0pFVVVoi0bxknPP+/o8Qa71QWcnaq9eRS/XQGI09T9+L8zIB+G/xfaIKj56FGfOn0fo
        7VsE6utREwx6SoDXfrmrywnRRT3kDpPYIJzbTBsaG7Hh3DkcP30aj3kue0Td7n/0ItktTha/mUIkYbpJ
        1kTC3KCRC8JH2chRQvivXcPhEycQ4l/EPzyXF+P+ReYriSBekcSRtXKH+ekgEmKjbOTIW9Ffx44hzG8U
        dzkn5Qe/CDOQ+7b1gl6TbHLWSA9pWEFy8vOd7fsOhcNoaGtzbktPSMrKNnbyH5qhk/0XZe3kNvaeopTD
        P/ohB5kzbx5W5eWhgGGKy8qwtqQEhX6/+QUFtEaOfT5UV1ejorLyx0HcW42b0fHdrcZjm/FnZGSYUfDD
        zfht/P/DgigbFkTVAL4Ardm9yyFFmYwAAAAASUVORK5CYII=
</value>
  </data>
</root>